(()=>{"use strict";const t={taskPriorities:["High","Medium","Low"],addTaskPriority(t,e){this.taskPriorities.splice(t-1,0,e)},taskStates:["Done","WIP","Todo","Abandoned"],addTaskState(t,e){this.taskStates.splice(t-1,0,e)}},e=(e,s,a="",i=3)=>{const o={taskPriorities:t.taskPriorities,taskStates:t.taskStates},r={getTitle:()=>e,setTitle:t=>e=t,getDueDate:()=>s,setDueDate:t=>date=t,getDesc:()=>a,setDesc:t=>a=t,getPriority(){return console.log(this.taskPriorities),this.taskPriorities[i-1]},setPriority(t){i=t},stateDegree:void 0,getState(){return console.log(this.taskStates),this.taskStates[this.stateDegree-1]},setState(t){this.stateDegree=t}};return Object.assign(Object.create(o),r)};let s=e("Test Task",30,"fe",4),a=e("task 2",1);t.addTaskPriority(4,"VeryLow"),t.addTaskState(1,"Done Well"),console.log(s,a),console.log(s.getState(),a.getState())})();